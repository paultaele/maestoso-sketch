package edu.tamu.srl.music.classifier;

import java.awt.geom.Point2D;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import edu.tamu.srl.music.xml.XmlSketch;
import edu.tamu.srl.music.xml.XmlSketchParser;

public class Template {
	
	public Template(String shape, List<List<Point2D.Double>> strokes) {
		
		myShape = shape;
		myStrokes = strokes;
	}
	
	public List<List<Point2D.Double>> getStrokes() {
		
		return myStrokes;
	}
	
	public void setPoints(List<List<Point2D.Double>> strokes) {
		
		myStrokes = strokes;
	}
	
	public String getShape() {
		
		return myShape;
	}
	
	// #####
	
	public static void loadTemplates() {
		
		// initialize the map
		HashMap<String, List<Template>> map = new HashMap<String, List<Template>>();
		
		// get the list of XML data subdirectories
		File directory = new File(DATA_DIR_PATHNAME);
		List<File> subdirectories = new ArrayList<File>();
		for (File subdirectory : directory.listFiles()) {
			if (subdirectory.isDirectory())
				subdirectories.add(subdirectory);
		}
		
		// get the XML files from the first subdirectory
		File currentSubdirectory = subdirectories.get(0);
		List<File> xmlFiles = new ArrayList<File>();
		for (File xmlFile : currentSubdirectory.listFiles()) {
			
			if (xmlFile.isFile() && xmlFile.getName().endsWith(".xml")) {
			
				xmlFiles.add(xmlFile);
			}
		}
		
		// convert each XML file to XML sketch objects
		List<File> xmlSketches = new ArrayList<File>();
		XmlSketchParser parser = null;
		for (File xmlFile : xmlFiles) {
			
			parser = new XmlSketchParser(xmlFile);
			XmlSketch xmlSketch = parser.getSketch();
		}
		
		
		// set the initial variable
		myTemplatesMap = map;
	}
	
	public List<Template> getTemplates(String shapeGroup) {
		
		return myTemplatesMap.get(shapeGroup);
	}
	
	
	
	
	private List<List<Point2D.Double>> myStrokes;
	private String myShape;
	
	private static HashMap<String, List<Template>> myTemplatesMap;
	public static final String DATA_DIR_PATHNAME = "src/edu/tamu/srl/music/data/";
}